const knowledge = [
 
];

//–¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏–π —Å–∫–∞–∑—É–µ–º—ã—Ö 
let endings =
[
    ["–µ—Ç","(–µ—Ç|—É—Ç|—é—Ç)"], 
    ["—É—Ç","(–µ—Ç|—É—Ç|—é—Ç)"], 
    ["—é—Ç","(–µ—Ç|—É—Ç|—é—Ç)"],		     //1 —Å–ø—Ä—è–∂–µ–Ω–∏–µ

    ["–∏—Ç","(–∏—Ç|–∞—Ç|—è—Ç)"], 
    ["–∞—Ç","(–∏—Ç|–∞—Ç|—è—Ç)"], 
    ["—è—Ç","(–∏—Ç|–∞—Ç|—è—Ç)"],		     //2 —Å–ø—Ä—è–∂–µ–Ω–∏–µ

    ["–µ—Ç—Å—è","(–µ—Ç|—É—Ç|—é—Ç)—Å—è"], 
    ["—É—Ç—Å—è","(–µ—Ç|—É—Ç|—é—Ç|—É—é—â–∏–µ)—Å—è"], 
    ["—é—Ç—Å—è","(–µ—Ç|—É—Ç|—é—Ç)—Å—è"], //1 —Å–ø—Ä—è–∂–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—Ç–Ω—ã–µ

    ["–∏—Ç—Å—è","(–∏—Ç|–∞—Ç|—è—Ç)—Å—è"], 
    ["–∞—Ç—Å—è","(–∏—Ç|–∞—Ç|—è—Ç)—Å—è"], 
    ["—è—Ç—Å—è","(–∏—Ç|–∞—Ç|—è—Ç)—Å—è"],     //2 —Å–ø—Ä—è–∂–µ–Ω–∏–µ, –≤–æ–∑–≤—Ä–∞—Ç–Ω—ã–µ

    ["—è—â–∏–µ","—è—â–∏–µ"],
    ["ee", "ee"],
    ["–µ–Ω","–µ–Ω"],
    ["—É—é","–∞—è"],
    ["–º—É","–º–∞"],
    ["–µ–Ω–∞","–µ–Ω–∞"], 
    ["–µ–Ω–æ","–µ–Ω–æ"], 
    ["–µ–Ω—ã","–µ–Ω—ã"],		    //–∫—Ä–∞—Ç–∫–∏–µ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ

    ["–∞–Ω","–∞–Ω"], 
    ["–∞—è","—É—é"],
    ["–∞–Ω–∞","–∞–Ω–∞"], 
    ["–∞–Ω–æ","–∞–Ω–æ"], 
    ["–∞–Ω—ã","–∞–Ω—ã"],		    //–∫—Ä–∞—Ç–∫–∏–µ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ

    ["–Ω–æ", "–Ω–æ"], 
    ["–Ω–∞", "–Ω–∞"],

    ["–∂–µ–Ω","–∂–µ–Ω"], 
    ["–∂–Ω–∞","–∂–Ω–∞"], 
    ["–∂–Ω–æ","–∂–Ω–æ"], 
    ["–∂–Ω—ã","–∂–Ω—ã"],

    ["—Ç–∞–∫–æ–µ", "- —ç—Ç–æ"],
]

//¬´—á–µ—Ä–Ω—ã–π¬ª —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ª–µ–∂–∞—â–∏—Ö
let blacklist = ["–∑–∞–º–µ–Ω–∞", "–∑–∞–º–µ–Ω—ã", "–∞—Ç—Ä–∏–±—É—Ç", "–º–∞—Ä—à—Ä—É—Ç", "—á–ª–µ–Ω", "–Ω–µ—Ç"]

//–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∫–∞–∑—É–µ–º—ã—Ö –≤ –≤–æ–ø—Ä–æ—Å–µ –ø–æ –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏—è–º
function getEndingIndex(word)
{
    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–≤–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ —á–µ—Ä–Ω–æ–º—É —Å–ø–∏—Å–∫—É –≤ –º–∞—Å—Å–∏–≤–µ blacklist
    if(blacklist.indexOf(word) !== -1)
        return -1;
    
    //–ø–µ—Ä–µ–±–æ—Ä –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏–π –≤ –º–∞—Å—Å–∏–≤–µ endings
    for(let i = 0; i < endings.length; i++)
        //–ø—Ä–æ–≤–µ—Ä–∫–∞, –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ word –Ω–∞ iE-–æ–µ –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏–µ
        if(word.substring(word.length - endings[i][0].length) == endings[i][0])     // substring(–Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å, –∫–æ–Ω–µ—á–Ω—ã–π)
            //–≤–æ–∑–≤—Ä–∞—Ç –Ω–æ–º–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–ª—è —Å–∫–∞–∑—É–µ–º–æ–≥–æ 
            return i;

    //–µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ—Ç, —Ç–æ –≤–æ–∑–≤—Ä–∞—Ç -1
    return -1;
} // –ø—Ä–∏–º–µ—Ä: —Ç–∞–∫–æ–µ (5) - –µ—Ç (2) == –µ—Ç

//–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –≤ —Ç–µ–∫—Å—Ç–µ –º–∞–ª–µ–Ω—å–∫–æ–π:
function firstSymbolToLowerCase(str)
{
    return str.substring(0, 1).toLowerCase() + str.substring(1);
}

//–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –≤ —Ç–µ–∫—Å—Ç–µ –±–æ–ª—å—à–æ–π:
function firstSymbolToUpperCase(str)
{
    return str.substring(0, 1).toUpperCase() + str.substring(1);
}

function getAnswer(question)
{
    //–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–∏ question 
    //—á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—É—é –±—É–∫–≤—É –≤ —Ç–µ–∫—Å—Ç–µ –≤–æ–ø—Ä–æ—Å–∞ –ø—Ä–æ–ø–∏—Å–Ω–æ–π (–º–∞—Å–µ–Ω—å–∫–æ–π)
    let text = firstSymbolToLowerCase(question);
    //–∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
    let separators = "'\",.!?()[]\\/";
    //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–æ–≤ –ø–µ—Ä–µ–¥ –∑–Ω–∞–∫–∞–º–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
    for(let i = 0; i < separators.length; i++)
        text = text.replace(separators[i], " " + separators[i]);    // replace(—á—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å, –Ω–∞ —á—Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å)

    //–º–∞—Å—Å–∏–≤ —Å–ª–æ–≤ –∏ –∑–Ω–∞–∫–æ–≤ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è, –æ—Ç–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏
    let words = text.split(' ');

    //–ø–µ—Ä–µ–±–æ—Ä —Å–ª–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ —Å–ª–æ–≤ –∏–∑ –≤–æ–ø—Ä–æ—Å–∞: –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –∫ lowerCase
    for(let i = 0; i < words.length; i++)
        words[i] = firstSymbolToLowerCase(words[i]);

    //—Ñ–ª–∞–≥, –Ω–∞–π–¥–µ–Ω –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    let result = false;
    let answer = "";

    for(let i = 0; i < words.length; i++)
    {
        // –ø–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–∫–∞–∑—É–µ–º–æ–≥–æ
        let ending = getEndingIndex(words[i]);

        if(ending >= 0)
        {
            //–∑–∞–º–µ–Ω–∞ –ø—Å–µ–≤–¥–æ–æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–∞ –Ω–∞–±–æ—Ä –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ–∫–æ–Ω—á–∞–Ω–∏–π, —Ö—Ä–∞–Ω—è—â–∏—Ö—Å—è 
            //–≤–æ –≤—Ç–æ—Ä–æ–º —Å—Ç–æ–ª–±—Ü–µ –º–∞—Å—Å–∏–≤–∞. –ø—Ä–∏–º–µ—Ä, –≥–ª–∞–≥–æ–ª "–≤–µ–¥–µ—Ç"(5) - endings[0][0].length (–µ—Ç(2)). substring(0, 3) = –≤–µ–¥ + (–µ—Ç|—É—Ç|—é—Ç) = –≤–µ–¥(–µ—Ç|—É—Ç|—é—Ç)

            words[i] = words[i].substring(0, words[i].length - endings[ending][0].length) + endings[ending][1]

            console.log(words)
            
            //—Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Å–∫–∞–∑—É–µ–º–æ–º—É –∏–∑ –≤–æ–ø—Ä–æ—Å–∞
            let predicate = new RegExp(".*" + words[i] + ".*");     // .*: –ª—é–±–æ–π —Å–∏–º–≤–æ–ª (–∫—Ä–æ–º–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏) –Ω–æ–ª—å –∏–ª–∏ –±–æ–ª–µ–µ —Ä–∞–∑.

            //–¥–ª—è –∫—Ä–∞—Ç–∫–∏—Ö –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω—É–∂–Ω–æ –∑–∞—Ö–≤–∞—Ç–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã–º —Å–ª–æ–≤–æ
            if(endings[ending][0] == endings[ending][1])
            {
                if(words[i] != "–Ω—É–∂–µ–Ω")
                {
                    predicate = new RegExp(".*" + words[i] + " " + words[i + 1] + ".*");    // –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞ –Ω–∏–º —Å–ª–æ–≤–æ
                    i++;
                }
            }
            console.log(predicate)  

            //—Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –ø–æ–¥–ª–µ–∂–∞—â–µ–º—É –∏–∑ –≤–æ–ø—Ä–æ—Å–∞. –ø—Ä–∏–º–µ—Ä ¬´–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞¬ª –ø–æ—Å–ª–µ —Å–∫–∞–∑—É–µ–º–æ–≥–æ –±—É–¥–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ 
            //—Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ  –¥–ª—è –ø–æ–¥–ª–µ–∂–∞—â–µ–≥–æ: ¬´.*–ø–ª–æ—â–∞–¥—å.*–∫–≤–∞–¥—Ä–∞—Ç–∞.*¬ª, 

            let subjectReg = words.slice(i + 1).join(".*");
            //words.slice(i + 1): –ú–µ—Ç–æ–¥ slice –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –Ω–∞—á–∏–Ω–∞—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞ i + 1 –∏ –¥–æ –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞ words. –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥–º–∞—Å—Å–∏–≤, –Ω–µ –∏–∑–º–µ–Ω—è—è 
            //–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤.

            //.join(".*"): –ú–µ—Ç–æ–¥ join –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –±—É–¥—É—Ç 
            //–æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–æ–∫–∏ ".*" –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è.
            console.log(subjectReg)
            
            //—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –ø–æ–¥–ª–µ–∂–∞—â–µ–º –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤
            if(subjectReg.length > 3)
            {
                let subject = new RegExp(".*" + subjectReg + ".*");
                console.log(subject)

                //–ø–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å —à–∞–±–ª–æ–Ω–∞–º–∏ —Å—Ä–µ–¥–∏ —Å–≤—è–∑–µ–π —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–µ—Ç–∏
                for(let j = 0; j < knowledge.length; j++)
                {
                    if(predicate.test(knowledge[j][1].toLowerCase()) && (subject.test(knowledge[j][0].toLowerCase()) || subject.test(knowledge[j][2].toLowerCase())))
                    {
                        //—Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–≤—è–∑–∏
                        answer += firstSymbolToUpperCase(knowledge[j][0] + " " + knowledge[j][1] + " " + knowledge[j][2] + "<br>");
                        result = true;
                    }
                }

                //–µ—Å–ª–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Å –¥–≤—É–º—è —à–∞–±–ª–æ–Ω–∞–º–∏ –Ω–µ—Ç,
                if(!result)
                {
                    //–ø–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ —Å —à–∞–±–ª–æ–Ω–æ–º –ø–æ–¥–ª–µ–∂–∞—â–µ–≥–æ
                    for(let j = 0; j < knowledge.length; j++)
                    {
                        if(subject.test(knowledge[j][0].toLowerCase() || subject.test(knowledge[j][2].toLowerCase())))
                        {
                            //—Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π —Å–≤—è–∑–∏
                            answer += firstSymbolToUpperCase(knowledge[j][0] + " " + knowledge[j][1] + " " + knowledge[j][2] + "<br>");
                            result = true;
                            break;
                        }
                    }
                }
            }
        }
    }
    //–µ—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç
    if(!result)
        answer = "–û—Ç–≤–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. <br/>";
    return answer;
}
    
const questions = [
  
];


function Script() {
    for (let i = 0; i < questions.length; i++) {
        if (confirm("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥?")) {
            let userQuestion = prompt("–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", questions[i]);
            alert(getAnswer(userQuestion));
        } else {
            break;
        }
    }
}
            
var dialogOn = false;

function dialog_window() {
  document.body.innerHTML += "<div id='dialog' class='dialog' style='margin-left:-25px;'>" + 
  "<div class='label' onclick='openDialog()'>–ù–∞–∂–∏–º–∞–π —Å—é–¥–∞üòú</div>" +
  "<div class='header'>–ò—Å—Ç–æ—Ä–∏—è</div>" +
  "<div class='history' id='history'></div>" +
  "<div class='question'><input id='Qdialog' placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å'/> <br><button onclick='ask(\"Qdialog\")'>–°–ø—Ä–æ—Å–∏—Ç—å</button></div>" + "<button class='button-quest' onclick='clearHistory()'>–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é</button>" +
  "</div>";
  //API-–∫–ª—é—á –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–µ—á–µ–≤–æ–º—É —Å–µ—Ä–≤–∏—Å—É Yandex
  window.ya.speechkit.settings.apikey='5c6d6536-b453-4589-9bc7-f16c7a795106';
  //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è "–ü–æ–ª–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞"
  //—Å –≤—ã–≤–æ–¥–æ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á–∏ –≤ —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
  var textline = new ya.speechkit.Textline('Qdialog',{onInputFinished:function(text){
  document.getElementById('Qdialog').value=text;}});
}

dialog_window();

function openDialog(){
  if(dialogOn) {  		//–∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞
      $("#dialog").animate({"margin-left":"-25px"},1000,function(){});
          dialogOn=false;
  }
  
  else {				//–∞–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞
      $("#dialog").animate({"margin-left":"-1180px"},1000,function() {});
          dialogOn=true;
  clearInterval(timer);
  }
}

function ask(questionInput){
  //–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è –æ–∫–Ω–∞ –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞:
  var question=document.getElementById(questionInput).value;
  //–∞–∫—Ç–∏–≤–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞
  dialogOn=true;
  //—Å–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –Ω–µ–π —Ç–µ–≥ <div> 
  var newDiv=document.createElement("div");
  //–∑–∞–¥–∞–µ–º –∫–ª–∞—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞
  newDiv.className='question';
  //–∑–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–æ–º –≤–æ–ø—Ä–æ—Å–∞
  newDiv.innerHTML=question;
  //–≤—Å—Ç–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –±–ª–æ–∫ –≤ –±–ª–æ–∫ <history> –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
  document.getElementById("history").appendChild(newDiv);
  +"</div>";
  //—Å–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–∏–Ω –±–ª–æ–∫ <div>
  newDiv=document.createElement("div");
  //–∑–∞–¥–∞–µ–º –∫–ª–∞—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞ 
  newDiv.className='answer';
  //–Ω–∞–ø–æ–ª–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –±–ª–æ–∫ –æ—Ç–≤–µ—Ç–æ–º, –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –æ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ getAnswer()
  newDiv.innerHTML=getAnswer(question);
  //–¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Ç–≤–µ—Ç —Ç–µ–≥ –∞—É–¥–∏–æ, —Å—Å—ã–ª–∞—é—â–∏–π—Å—è –Ω–∞ –∑–≤—É–∫ –æ—Ç —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä–∞ Yandex
  newDiv.innerHTML+=
  "<audio controls='true' autoplay='true'src='http://tts.voicetech.yandex.net/ key=5c6d6536-b453-4589-9bc7-f16c7a795106 text="
  +newDiv.innerText+"'></audio>";
  //–≤ –∫–æ—Ç–æ—Ä–æ–º —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç –∑–≤—É–∫–∞ –∏ —è–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–µ–º–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ generate?format=wav&lang=ru-RU&
  //–∞ —Ç–∞–∫–∂–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ –∫ SpeechKit Cloud API 
  //–æ–∑–≤—É—á–∏–≤–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç—Å—è –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
  //–≤—Å—Ç–∞–≤–∫–∞ –∑–≤–≤—É–∫–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ –≤ –±–ª–æ–∫ <history>
  document.getElementById("history").appendChild(newDiv);
  //–∑–∞–ø—É—Å–∫ –∑–≤—É–∫–∞
  if(newDiv.lastChild.tagName=="AUDIO"){newDiv.lastChild.play();	}
  //–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤ –æ–∫–Ω–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤ –≤ —Å–∞–º—ã–π –Ω–∏–∑
  document.getElementById("history").scrollTop = 
          document.getElementById("history").scrollHeight;	
  //–æ—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
  document.getElementById(questionInput).value="";
}            
  
function clearHistory() {
    var historyDiv = document.getElementById("history");
    historyDiv.innerHTML = ''; 
}
                